{"version":3,"sources":["index.tsx"],"names":["NativeModules","ResultStatusCode","AlipayVerifyEvent","AlipayVerify"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;GAAAA,gB,KAAAA,gB;;AAaZ,WAAYC,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAwBZ,MAAM;AAAEC,EAAAA;AAAF,IAAmBH,aAAzB;AAEA,eAAeG,YAAf","sourcesContent":["import { NativeModules } from 'react-native';\n\nexport enum ResultStatusCode {\n  /** 等待支付宝端完成认证。*/\n  AWAIT_VERIFY = 9001,\n  /** 认证通过 表示当前certifyId已认证通过 无需再次认证，但需向认证服务器查询真实认证结果 */\n  VERIFY_SUCCESS = 9000,\n  /** 网络异常 */\n  NETWORK_ANOMALY = 6002,\n  /** 用户取消 */\n  USER_CANCEL = 6001,\n  /** 系统异常 */\n  SYSTEM_EXCEPTION = 4000\n}\n\nexport enum AlipayVerifyEvent {\n  EVENT_QUERY_CERTIFY_RESULT = \"EVENT_QUERY_CERTIFY_RESULT\"\n}\n\ntype AlipayVerifyType = {\n  /**\n   * 获取认证场景码\n   * FACE：多因子人脸认证\n   * CERT_PHOTO：多因子证照认证\n   * CERT_PHOTO_FACE ：多因子证照和人脸认证\n   * SMART_FACE：多因子快捷认证\n   */\n  getBizCode(): Promise<string>,\n\n  /**\n   * 核实\n   * @param certifyId 认证Id\n   * @param certifyUrl 认证url\n   */\n  verify(certifyId: string, certifyUrl: string): Promise<ResultStatusCode>\n\n\n};\n\nconst { AlipayVerify } = NativeModules;\n\nexport default AlipayVerify as AlipayVerifyType;\n"]}